pipeline {
    agent any
	tools {
        git 'my-git'
    }
	environment {
	REPO_URL = 'https://github.com/anastaviki/test.git'
        PYTHONPATH = '/var/jenkins_home/.local/lib/python3.9/site-packages'
    }
    stages {
       stage('Check Pull Requests') {
    steps {
        script {
            def apiUrl = "https://api.github.com/repos/anastaviki/test/pulls?state=open&base=develop&head=feature-*"
            def response = httpRequest(
                url: apiUrl,
            )
            def pullRequests = readJSON(text: response.getContent())
            if (pullRequests.size() > 0) {
                // There are open pull requests, proceed with the build steps
                // ...
            } else {
                // There are no open pull requests, exit the pipeline successfully
                currentBuild.result = 'SUCCESS'
                error("No open pull requests")
            }
        }
    }
}

	stage('Inst') {
            steps {
                 sh 'echo $PYTHONPATH'
            }
        }
	stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/anastaviki/test.git'
            }
        }

		stage('Install dependencies') {
            steps {
			
                sh 'pip install -r requirements.txt'
				sh 'pip3 list'
            }
        }
		

		 stage('Run Pytest') {
            steps {
                sh 'python3 -m pytest PyTest_HW/PyTest/test_cases.py --html=report.html '
            }
        }
		
		stage('Run Robot Framework Tests') {
            steps {
			
                sh 'python3 -m robot -d reports/ RobotFramework_HW/RF_Tests/tests/'
            }
        }
		 stage('Move to Release Branch') {
      steps {
        script {
          def date = new Date().format('yyyyMMdd')
          sh "git checkout -b release-$date"
          sh "git push origin release-$date"
        }
      }
    }
    }
}
