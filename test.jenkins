pipeline {
    agent any
	tools {
        git 'my-git'
    }
	environment {
        PYTHONPATH = '/var/jenkins_home/.local/lib/python3.9/site-packages'
    }
    stages {
	   stage('Check Pull Requests') {
      steps {
        script {
          def git = sh(script: 'git ls-remote --refs origin "refs/pull/*/head"', returnStdout: true)
          def pullRequests = git.split("\n").collect { it.split()[1].replace('refs/pull/', '').replace('/head', '') }.unique().findAll { it != '' }
          def branches = sh(script: 'git ls-remote --refs origin "refs/heads/develop"', returnStdout: true).split("\n").collect { it.split()[1].replace('refs/heads/', '') }.unique()
          def suitablePullRequests = pullRequests.findAll { branches.contains(it as String) }
          if (suitablePullRequests.size() > 0) {
            echo "Suitable pull request found: ${suitablePullRequests[0]}"
          } else {
            error "No suitable pull requests found"
          }
        }
      }
    }

	stage('Inst') {
            steps {
                 sh 'echo $PYTHONPATH'
            }
        }
	stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/anastaviki/test.git'
            }
        }

		stage('Install dependencies') {
            steps {
			
                sh 'pip install -r requirements.txt'
				sh 'pip3 list'
            }
        }
		

		 stage('Run Pytest') {
            steps {
                sh 'python3 -m pytest PyTest_HW/PyTest/test_cases.py --html=report.html '
            }
        }
		
		stage('Run Robot Framework Tests') {
            steps {
			
                sh 'python3 -m robot -d reports/ RobotFramework_HW/RF_Tests/tests/'
            }
        }
    }
}
