<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.9.2 on linux)" generated="20230421 08:57:50.619" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/var/jenkins_home/workspace/t34/RobotFramework_HW/RF_Tests/tests">
<suite id="s1-s1" name="Tests" source="/var/jenkins_home/workspace/t34/RobotFramework_HW/RF_Tests/tests/tests.robot">
<kw name="Connect To Database" library="DatabaseLibrary" type="SETUP">
<arg>pymssql</arg>
<arg>${DBName}</arg>
<arg>${DBUser}</arg>
<arg>${DBPass}</arg>
<arg>${DBHost}</arg>
<arg>${DBPort}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20230421 08:57:50.650" level="INFO">Connecting using : pymssql.connect(database=AdventureWorks2012, user=test_user, password=test_user, host=EPPLWARW01DC\SQLEXPRESS, port=1433) </msg>
<status status="PASS" starttime="20230421 08:57:50.644" endtime="20230421 08:57:51.513"/>
</kw>
<test id="s1-s1-t1" name="Verify the count of records in [Person].[Address] table" line="10">
<kw name="Query" library="DatabaseLibrary">
<var>@{result}</var>
<arg>${query_person_address_count}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230421 08:57:51.515" level="INFO">Executing : Query  |  SELECT COUNT(*) AS count_rows FROM [Person].[Address]; </msg>
<msg timestamp="20230421 08:57:51.518" level="INFO">@{result} = [ (19614,) ]</msg>
<status status="PASS" starttime="20230421 08:57:51.515" endtime="20230421 08:57:51.518"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 08:57:51.519" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230421 08:57:51.518" endtime="20230421 08:57:51.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result}[0][0]</arg>
<arg>${query_person_address_count_result}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230421 08:57:51.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 08:57:51.519" endtime="20230421 08:57:51.519"/>
</kw>
<doc>| *Setup*:
| 0.Connect To Database AdventureWorks2012 via pymsql
|
| *Test Steps*
| 0.Query row count for Table Person.Address
|
| *Expected result:*
| 0.Result is not empty
| 1.The value with the total number of records in the [Person].[Address] table is the same as expected</doc>
<tag>Table Person.Address</tag>
<status status="PASS" starttime="20230421 08:57:51.514" endtime="20230421 08:57:51.519"/>
</test>
<test id="s1-s1-t2" name="Verify the number of unique cities in [Person].[Address] table" line="26">
<kw name="Query" library="DatabaseLibrary">
<var>@{result}</var>
<arg>${query_person_address_unique_cities}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230421 08:57:51.520" level="INFO">Executing : Query  |  SELECT COUNT(DISTINCT [City]) AS count_cities FROM [Person].[Address]; </msg>
<msg timestamp="20230421 08:57:51.530" level="INFO">@{result} = [ (575,) ]</msg>
<status status="PASS" starttime="20230421 08:57:51.520" endtime="20230421 08:57:51.530"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 08:57:51.531" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230421 08:57:51.530" endtime="20230421 08:57:51.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result}[0][0]</arg>
<arg>${query_person_address_unique_cities_result}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230421 08:57:51.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 08:57:51.531" endtime="20230421 08:57:51.531"/>
</kw>
<doc>| *Setup*:
| 0.Connect To Database AdventureWorks2012 via pymsql
|
| *Test Steps*
| 0.Query to calculate number of unique cities in [Person].[Address] table
|
| *Expected result:*
| 0.Result is not empty
| 1.The total number unique cities in the [Person].[Address] table is the same as expected</doc>
<tag>Table Person.Address</tag>
<status status="PASS" starttime="20230421 08:57:51.519" endtime="20230421 08:57:51.531"/>
</test>
<test id="s1-s1-t3" name="Verify the average length of the documents in [Production].[Document] table" line="42">
<kw name="Query" library="DatabaseLibrary">
<var>@{result}</var>
<arg>${query_average_lenght_of_doc}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230421 08:57:51.532" level="INFO">Executing : Query  |  SELECT AVG(LEN([Document])) AS avg_lenght FROM [Production].[Document]; </msg>
<msg timestamp="20230421 08:57:51.535" level="INFO">@{result} = [ (31971,) ]</msg>
<status status="PASS" starttime="20230421 08:57:51.532" endtime="20230421 08:57:51.535"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 08:57:51.536" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230421 08:57:51.535" endtime="20230421 08:57:51.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result}[0][0]</arg>
<arg>${query_average_lenght_of_doc_result}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230421 08:57:51.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 08:57:51.536" endtime="20230421 08:57:51.536"/>
</kw>
<doc>| *Setup*:
| 0.Connect To Database AdventureWorks2012 via pymsql
|
| *Test Steps*
| 0.Query to calculate average length of the documents in [Production].[Document] table
|
| *Expected result:*
| 0.Result is not empty
| 1. Average value of length of [Document] in [Production].[Document] table is the same as expected</doc>
<tag>Table Production.Document</tag>
<status status="PASS" starttime="20230421 08:57:51.531" endtime="20230421 08:57:51.536"/>
</test>
<test id="s1-s1-t4" name="Verify the possible values of [Status] attribute in [Production].[Document] table" line="58">
<kw name="Query" library="DatabaseLibrary">
<var>@{result}</var>
<arg>${query_possible_status}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230421 08:57:51.537" level="INFO">Executing : Query  |  SELECT COUNT ([Status]) AS count_values FROM [Production].[Document] WHERE [STATUS] &lt;1 OR [STATUS]&gt;3; </msg>
<msg timestamp="20230421 08:57:51.541" level="INFO">@{result} = [ (0,) ]</msg>
<status status="PASS" starttime="20230421 08:57:51.537" endtime="20230421 08:57:51.541"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 08:57:51.541" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230421 08:57:51.541" endtime="20230421 08:57:51.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${result}[0][0]</arg>
<arg>${query_possible_status_result}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230421 08:57:51.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 08:57:51.541" endtime="20230421 08:57:51.542"/>
</kw>
<doc>| *Setup*:
| 0.Connect To Database AdventureWorks2012 via pymsql
|
| *Test Steps*
| 0.Query to calculate count of rows with incorrect [Status].
|
| *Expected result:*
| 0.Result is not empty
| 1. Count of rows with incorrect [Status] is the same as expected: 0</doc>
<tag>Table Production.Document</tag>
<status status="PASS" starttime="20230421 08:57:51.536" endtime="20230421 08:57:51.542"/>
</test>
<test id="s1-s1-t5" name="Verify the maximum value of the [ModifiedDate] column in [Production].[UnitMeasure] table" line="74">
<kw name="Query" library="DatabaseLibrary">
<var>@{result}</var>
<arg>${query_max_modified_date}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230421 08:57:51.543" level="INFO">Executing : Query  |  SELECT MAX([ModifiedDate]) as max_date FROM [Production].[UnitMeasure]; </msg>
<msg timestamp="20230421 08:57:51.546" level="INFO">@{result} = [ (datetime.datetime(2008, 4, 30, 0, 0),) ]</msg>
<status status="PASS" starttime="20230421 08:57:51.542" endtime="20230421 08:57:51.546"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 08:57:51.546" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230421 08:57:51.546" endtime="20230421 08:57:51.546"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result}[0][0]</arg>
<arg>${query_max_modified_date_result}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230421 08:57:51.546" level="INFO">Argument types are:
&lt;class 'datetime.datetime'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 08:57:51.546" endtime="20230421 08:57:51.547"/>
</kw>
<doc>| *Setup*:
| 0.Connect To Database AdventureWorks2012 via pymsql
|
| *Test Steps*
| 0.Query to calculate the maximum value of the [ModifiedDate] column in [Production].[UnitMeasure] table.
|
| *Expected result:*
| 0.Result is not empty
| 1. The maximum value of the [ModifiedDate] column in [Production].[UnitMeasure] table is the same as expected.</doc>
<tag>Table Production.UnitMeasure</tag>
<status status="PASS" starttime="20230421 08:57:51.542" endtime="20230421 08:57:51.547"/>
</test>
<test id="s1-s1-t6" name="Verify the numbers of rows in [Production].[UnitMeasure] table with [UnitMeasureCode] with only one symbol" line="90">
<kw name="Query" library="DatabaseLibrary">
<var>@{result}</var>
<arg>${query_numbers_with_one_symbol}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230421 08:57:51.547" level="INFO">Executing : Query  |  SELECT COUNT(*) AS count_values FROM [Production].[UnitMeasure] WHERE LEN([UnitMeasureCode])=1; </msg>
<msg timestamp="20230421 08:57:51.550" level="INFO">@{result} = [ (4,) ]</msg>
<status status="PASS" starttime="20230421 08:57:51.547" endtime="20230421 08:57:51.550"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230421 08:57:51.550" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20230421 08:57:51.550" endtime="20230421 08:57:51.550"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${result}[0][0]</arg>
<arg>${query_numbers_with_one_symbol_result}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230421 08:57:51.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230421 08:57:51.550" endtime="20230421 08:57:51.551"/>
</kw>
<doc>| *Setup*:
| 0.Connect To Database AdventureWorks2012 via pymsql
|
| *Test Steps*
| 0.Query to calculate numbers of rows in [Production].[UnitMeasure] table with [UnitMeasureCode] with only one symbol.
|
| *Expected result:*
| 0.Result is not empty
| 1.Numbers of rows in [Production].[UnitMeasure] table with [UnitMeasureCode] with only one symbol is the same as expected.</doc>
<tag>Table Production.UnitMeasure</tag>
<status status="PASS" starttime="20230421 08:57:51.547" endtime="20230421 08:57:51.551"/>
</test>
<kw name="Disconnect From Database" library="DatabaseLibrary" type="TEARDOWN">
<doc>Disconnects from the database.</doc>
<msg timestamp="20230421 08:57:51.551" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20230421 08:57:51.551" endtime="20230421 08:57:51.551"/>
</kw>
<doc>Contains Test Cases from file TestCasesRF.xlsx</doc>
<status status="PASS" starttime="20230421 08:57:50.635" endtime="20230421 08:57:51.551"/>
</suite>
<status status="PASS" starttime="20230421 08:57:50.620" endtime="20230421 08:57:51.552"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">Table Person.Address</stat>
<stat pass="2" fail="0" skip="0">Table Production.Document</stat>
<stat pass="2" fail="0" skip="0">Table Production.UnitMeasure</stat>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1" name="Tests">Tests.Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
